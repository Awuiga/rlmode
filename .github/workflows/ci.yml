name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Ruff
        run: ruff check .
      - name: Black
        run: black --check .

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Pytest (unit)
        run: pytest -m "not integration" --maxfail=1 --disable-warnings

  integration:
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Generate model artifacts
        run: |
          python train.py --data tests/data/ci_training.csv --output-dir ci_artifacts --markout-col markout --precision-target 0.6 --min-support 10 --min-avg-markout 0.0
      - name: Pytest (integration)
        env:
          PYTHONWARNINGS: default
        run: pytest -m integration --maxfail=1 --disable-warnings
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            ci_artifacts/reliability.png
            ci_artifacts/reliability.json
            ci_artifacts/threshold_sweep.json
            ci_artifacts/pr_curve.png
            ci_artifacts/pr_curve.json
            ci_artifacts/lgbm_meta.json
            ci_artifacts/onnx_parity.log
  parquet_schema:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Scan parquet gaps
        run: python scripts/scan_parquet_gaps.py --root data/parquet --threshold-ms 60000 --output reports/parquet_gaps.json

  validate_symbols:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Validate symbols config
        run: python scripts/validate_config.py --config config/app.yml

  onnx_parity:
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: ci_artifacts
      - name: Check ONNX parity log
        run: python scripts/test_onnx_parity.py --log ci_artifacts/onnx_parity.log
