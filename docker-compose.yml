services:
  redis:
    profiles: ["paper", "real"]
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes", "--save", "60", "1000"]
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 20
    restart: unless-stopped

  collector:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.collector.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo ok"]
      interval: 10s
      timeout: 2s
      retries: 10

  signal_engine:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.signal_engine.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  ai_scorer:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.ai_scorer.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  executor:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.executor.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  risk:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.risk.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  monitor:
    profiles: ["paper", "real"]
    build: .
    command: ["python", "-m", "app.monitor.main"]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  parquet-dumper:
    profiles: ["paper", "real"]
    build: .
    command: [
      "python", "dump_market_to_parquet.py",
      "--redis", "${REDIS_URL:-redis://redis:6379/0}",
      "--stream", "md:raw",
      "--out", "/app/data/parquet",
      "--roll", "hourly",
      "--max-batch", "25000",
      "--idle-ms", "500",
      "--group", "parquet:grp",
      "--consumer", "${HOSTNAME:-container}-$$",
      "--flush-seconds", "10",
      "--src", "${SRC_TAG:-bybit_v5}",
      "--metrics-port", "8001"
    ]
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_CONFIG=/app/config/app.yml
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - EXCHANGE_MODE=${EXCHANGE_MODE:-paper}
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8001/metrics >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
